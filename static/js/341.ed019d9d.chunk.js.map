{"version":3,"file":"static/js/341.ed019d9d.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,GAAAA,KAAH,2JAQXC,EAAQD,EAAAA,GAAAA,MAAH,6DAKLE,EAAQF,EAAAA,GAAAA,MAAH,mIASLG,EAAYH,EAAAA,GAAAA,OAAH,0O,8BCjBTI,EAAY,WAEvB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAExB,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACE,OAEL,EAGKC,GAAWC,EAAAA,EAAAA,MAQXC,EAAQ,WACZV,EAAS,IACTE,EAAY,GACb,EAGD,OACE,UAACb,EAAD,CAAasB,SAdM,SAAAP,GACnBA,EAAEQ,iBACFJ,EAASK,EAAAA,EAAAA,MAAqB,CAAEd,MAAAA,EAAOE,SAAAA,KAEvCS,GACD,EASC,WACE,SAACnB,EAAD,CAAOuB,QAASnB,EAAhB,oBACA,SAACH,EAAD,CACEuB,KAAK,QACLT,KAAK,QACLU,UAAQ,EACRC,GAAItB,EACJY,MAAOR,EACPmB,SAAUf,KAEZ,SAACZ,EAAD,CAAOuB,QAASjB,EAAhB,uBACA,SAACL,EAAD,CACEuB,KAAK,WACLT,KAAK,WACLU,UAAQ,EACRC,GAAIpB,EACJU,MAAON,EACPiB,SAAUf,KAEZ,SAACV,EAAD,CAAWsB,KAAK,SAAhB,sBAGL,ECjEYI,EAAY7B,EAAAA,GAAAA,IAAH,2HAQT8B,EAAQ9B,EAAAA,GAAAA,GAAH,sFCElB,EATc,WACZ,OACE,UAAC6B,EAAD,YACE,SAACC,EAAD,sBACA,SAAC1B,EAAD,MAGL,C,wDCTM,IAkBIE,EAAS,eAACyB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACR,EAAIS,GAWvD,OARET,IAFFS,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.styled.js","pages/Login.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  border: 1px solid SteelBlue;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  padding: 5px 100px 5px 5px;\n`;\n\nexport const Label = styled.label`\n  padding: 5px 5px;\n  color: Navy;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  padding: 5px 5px;\n  &:focus {\n    outline: 2px solid SteelBlue;\n  }\n  color: Navy;\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-right: auto;\n  margin-top: 10px;\n  border: none;\n  padding: 5px 20px;\n  border-radius: 2px;\n  color: white;\n  background-color: SteelBlue;\n  &:active {\n    background-color: DeepSkyBlue;\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { FormWrapper, Label, Input, SubmitBtn } from './LoginForm.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/auth-operations';\n\nexport const LoginForm = () => {\n  // ----controlled form\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n  // ----\n  // ----form submit\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n  // ----\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <Label htmlFor={emailInputId}>Email</Label>\n      <Input\n        type=\"email\"\n        name=\"email\"\n        required\n        id={emailInputId}\n        value={email}\n        onChange={handleChange}\n      />\n      <Label htmlFor={passwordInputId}>Password</Label>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        required\n        id={passwordInputId}\n        value={password}\n        onChange={handleChange}\n      />\n      <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 400px;\n  padding: 10px 10px;\n  border-radius: 10px;\n\n  background-color: PowderBlue;\n`;\n\nexport const Title = styled.h1`\n  font-size: 18px;\n  color: steelblue;\n  padding: 5px 0px;\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Container, Title } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Title>Log In</Title>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["FormWrapper","styled","Label","Input","SubmitBtn","LoginForm","emailInputId","nanoid","passwordInputId","useState","email","setEmail","password","setPassword","handleChange","e","currentTarget","name","value","dispatch","useDispatch","reset","onSubmit","preventDefault","authOperations","htmlFor","type","required","id","onChange","Container","Title","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}
{"version":3,"file":"static/js/310.6603a3c1.chunk.js","mappings":"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","sources":["pages/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","service-functions.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 400px;\n  padding: 10px 10px;\n  border-radius: 10px;\n\n  background-color: PowderBlue;\n`;\n\nexport const ContactsTitle = styled.h2`\n  color: steelblue;\n  padding: 5px 0px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 34px;\n  color: steelblue;\n  padding: 5px 0px;\n\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  /* font-size: 34px; */\n  color: steelblue;\n  padding: 5px 0px;\n  font-style: italic;\n`;\n\nexport const Error = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  border: 1px solid SteelBlue;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  padding: 5px 100px 5px 5px;\n`;\n\nexport const NameLabel = styled.label`\n  padding: 5px 5px;\n  color: Navy;\n`;\n\nexport const NameInput = styled.input`\n  border: none;\n  padding: 5px 5px;\n  &:focus {\n    outline: 2px solid SteelBlue;\n  }\n  color: Navy;\n`;\n\nexport const NumberLabel = styled.label`\n  padding: 5px 5px;\n  color: Navy;\n`;\n\nexport const NumberInput = styled.input`\n  border: none;\n  padding: 5px 5px;\n  &:focus {\n    outline: 2px solid SteelBlue;\n  }\n  color: Navy;\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-right: auto;\n  margin-top: 10px;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 2px;\n  color: white;\n  background-color: SteelBlue;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 700;\n  &:active {\n    background-color: DeepSkyBlue;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  FormWrapper,\n  NameLabel,\n  NameInput,\n  NumberLabel,\n  NumberInput,\n  SubmitBtn,\n} from 'components/ContactForm/ContactForm.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { checkName } from 'service-functions';\n\nexport const ContactForm = () => {\n  // ----controlled form\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  // ----\n  // ----form submit\n  const contactItems = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    if (!checkName(name, contactItems)) {\n      dispatch(addContact(contact));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  // ----\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <NameLabel htmlFor={nameInputId}>Name</NameLabel>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        id={nameInputId}\n        onChange={handleChange}\n      />\n      <NumberLabel htmlFor={numberInputId}>Phone Number</NumberLabel>\n      <NumberInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        id={numberInputId}\n        value={number}\n        onChange={handleChange}\n      />\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </FormWrapper>\n  );\n};\n","import { toast } from 'react-toastify';\n\nexport const checkName = (name, contacts) => {\n  const normalizedName = name.toLowerCase();\n  const foundName = contacts.find(\n    contact => contact.name.toLowerCase() === normalizedName\n  );\n  if (foundName) {\n    toast.warning(`${name} is already in contacts.`);\n    return true;\n  }\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  border: 1px solid Steelblue;\n  border-radius: 5px;\n  padding: 5px 5px;\n  margin-top: 5px;\n`;\n\nexport const ContactsList = styled.ul`\n  color: Steelblue;\n`;\n\nexport const ContactsListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const ContactData = styled.p`\n  display: flex;\n  align-items: center;\n  padding: 5px 5px;\n  color: navy;\n\n  &::before {\n    content: '\\u2022';\n    margin-right: 10px;\n    font-size: 26px;\n    color: steelblue;\n    color: white;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  border: none;\n  padding: 0px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactData, BtnDelete } from 'components/Contact/Contact.styled';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const Contact = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ContactData>\n        {name}: {number}\n      </ContactData>\n      <BtnDelete onClick={onDeleteContact}>\n        <RiDeleteBack2Fill\n          style={{ width: 20, height: 20, color: 'steelblue' }}\n        />\n      </BtnDelete>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector } from 'react-redux';\nimport {\n  ContactsWrapper,\n  ContactsList,\n  ContactsListItem,\n} from 'components/ContactList/ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <ContactsWrapper>\n      <ContactsList>\n        {filteredContacts.map(contact => (\n          <ContactsListItem key={contact.id}>\n            <Contact contact={contact} />\n          </ContactsListItem>\n        ))}\n      </ContactsList>\n    </ContactsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  border: 1px solid SteelBlue;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  padding: 5px 100px 5px 5px;\n  margin-top: 10px;\n`;\nexport const FilterLabel = styled.label`\n  padding: 5px 5px;\n  /* color: Navy; */\n  color: steelblue;\n  font-size: 20px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  border: none;\n  padding: 5px 5px;\n  &:focus {\n    outline: 2px solid SteelBlue;\n  }\n  color: Navy;\n`;\n","import { nanoid } from 'nanoid';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  FilterWrapper,\n  FilterLabel,\n  FilterInput,\n} from 'components/Filter/Filter.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filter-slice';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contacts-selectors';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor={filterInputId}>\n        <ImSearch\n          style={{ width: 20, height: 20, color: 'steelblue', marginRight: 10 }}\n        />\n        Find contacts by name\n      </FilterLabel>\n      <FilterInput\n        type=\"text\"\n        id={filterInputId}\n        value={filterValue}\n        onChange={onChangeFilter}\n      />\n    </FilterWrapper>\n  );\n};\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Container,\n  Title,\n  ContactsTitle,\n  Error,\n  Text,\n} from './Contacts.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { MdContactPhone } from 'react-icons/md';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactItems = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>\n        PhoneBook\n        <MdContactPhone\n          style={{\n            width: 40,\n            height: 40,\n            color: 'steelblue',\n            marginLeft: 5,\n          }}\n        />\n      </Title>\n      <ContactForm />\n      <Filter />\n      <ContactsTitle>Contacts</ContactsTitle>\n      {isLoading && !error && <Loader />}\n\n      {contactItems.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Text>\n          There are no entries in the phonebook yet. <br />\n          Please add a new contact.\n        </Text>\n      )}\n      {error && <Error>Oops, sorry, something went wrong...</Error>}\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","ContactsTitle","Title","Text","Error","FormWrapper","NameLabel","NameInput","NumberLabel","NumberInput","SubmitBtn","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","filterValue","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","nameInputId","nanoid","numberInputId","useState","setName","number","setNumber","handleChange","e","currentTarget","value","contactItems","useSelector","dispatch","useDispatch","reset","onSubmit","preventDefault","target","elements","normalizedName","find","toast","checkName","addContact","htmlFor","type","pattern","title","required","id","onChange","ContactsWrapper","ContactsList","ContactsListItem","ContactData","BtnDelete","Contact","onClick","deleteContact","style","width","height","color","ContactList","filteredContacts","map","FilterWrapper","FilterLabel","FilterInput","Filter","filterInputId","marginRight","changeFilter","useEffect","fetchContacts","marginLeft","Loader","length","autoClose"],"sourceRoot":""}